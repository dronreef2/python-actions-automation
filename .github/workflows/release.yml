name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Nova versão sem 'v' (ex: 0.2.0)"
        required: true
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate tag (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          [[ $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || { echo "Tag semver inválida: $TAG"; exit 1; }
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Bump version (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          VER=${{ inputs.version }}
          sed -i "s/^version = \"[0-9.]*\"/version = \"$VER\"/" pyproject.toml
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git commit -am "chore: bump version $VER" || echo "Sem mudanças"
          git tag v$VER
          git push --follow-tags
      - name: Build
        run: python -m build
      - name: Publish (TestPyPI)
        if: github.event_name == 'workflow_dispatch'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          twine upload --repository testpypi dist/* || echo "Falha/skip TestPyPI"
      - name: Publish (PyPI)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*
